trigger:
- develop

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  project: '**/FunderMaps.csproj'
  buildPlatform: 'Any CPU'
  runtime: 'win-x64'
  buildConfiguration: 'Release'

steps:
- checkout: self
  submodules: true

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: '$(project)'
    arguments: '--configuration $(buildConfiguration) --runtime $(runtime)'

# - task: VSTest@2
#   inputs:
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Publish Web App
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory) --runtime $(runtime) --self-contained false'
    zipAfterPublish: True

- task: DotNetCoreCLI@2
  displayName: Create Packages
  inputs:
    command: pack
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'FunderMapsBuildArtifacts'

# - task: PublishBuildArtifacts@1
#   inputs:
#     pathtoPublish: '$(System.ArtifactsDirectory)' 
#     artifactName: 'FunderMapsPublish'

- task: AzureWebApp@1
  displayName: Azure Web App Deploy
  inputs:
    azureSubscription: 'FunderMaps Staging - Azure Web Deploy'
    appName: 'fundermaps'
    package: '$(Build.ArtifactStagingDirectory)/**/FunderMaps.zip'
    slotName: staging
    deploymentMethod: zipDeploy