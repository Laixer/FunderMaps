trigger:
- master
- develop

jobs:
- job: Develop
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
  pool:
    vmImage: 'windows-latest'
  variables:
    solution: '**/*.sln'
    project: '**/FunderMaps.csproj'
    buildPlatform: 'Any CPU'
    buildRuntime: 'win-x64'
    buildConfiguration: 'Release'
    Version.MajorMinor: $(VersionTrack).$(Build.BuildID).5
    Vue.App_api_base_url: https://staging.fundermaps.com/ # TODO: This is for the time being. Frontend should be build independant of the environment.
    Vue.App_Mapbox_token: pk.eyJ1IjoieW9yaWNrMTciLCJhIjoiY2p3dGF5ZjBzMDh4NTQ3cGNuNHM4dnd4aCJ9.A97-an3utMhopzgJxcIjrw # TODO: This is for the time being. Frontend should be build independant of the environment.
    Vue.App_Mapbox_style: mapbox://styles/yorick17/cjwtd1zts0fjj1cpi00jzbhev # TODO: This is for the time being. Frontend should be build independant of the environment.
  steps:
  - checkout: self
    submodules: true

  - task: NuGetToolInstaller@1
    displayName: Install NuGet

  - task: NuGetCommand@2
    displayName: Restore Packages
    inputs:
      restoreSolution: '$(solution)'

  - task: DotNetCoreCLI@2
    displayName: Publish Web App Release Package
    inputs:
      command: publish
      publishWebProjects: True
      arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)/bin --runtime $(buildRuntime) --self-contained true /p:Version=$(Version.MajorMinor) /p:AssemblyVersion=$(Version.MajorMinor)'
      zipAfterPublish: True

  - task: NuGetCommand@2
    displayName: Create Packages
    inputs:
      command: 'pack'
      packagesToPack: '**/Laixer.Identity.Dapper.csproj'
      packDestination: '$(Build.ArtifactStagingDirectory)/pkg'
      versioningScheme: 'off'
      verbosityPack: 'Normal'

  - task: PublishBuildArtifacts@1
    displayName: Store Packages
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)/pkg'
      artifactName: PackageArtifacts

  - task: AzureWebApp@1
    displayName: Azure Web App Deploy - Staging
    inputs:
      appType: webApp
      azureSubscription: 'FunderMaps - Azure Web Deploy'
      appName: 'fundermaps'
      package: '$(Build.ArtifactStagingDirectory)/**/FunderMaps.zip'
      slotName: staging
      deploymentMethod: zipDeploy

- job: Master
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  pool:
    vmImage: 'windows-latest'
  variables:
    solution: '**/*.sln'
    project: '**/FunderMaps.csproj'
    buildPlatform: 'Any CPU'
    buildRuntime: 'win-x64'
    buildConfiguration: 'Release'
    Version.MajorMinor: $(VersionTrack).$(Build.BuildID).12
    Vue.App_api_base_url: https://app.fundermaps.com/ # TODO: This is for the time being. Frontend should be build independant of the environment.
    Vue.App_Mapbox_token: pk.eyJ1IjoieW9yaWNrMTciLCJhIjoiY2p3dGF5ZjBzMDh4NTQ3cGNuNHM4dnd4aCJ9.A97-an3utMhopzgJxcIjrw # TODO: This is for the time being. Frontend should be build independant of the environment.
    Vue.App_Mapbox_style: mapbox://styles/yorick17/cjwtd1zts0fjj1cpi00jzbhev # TODO: This is for the time being. Frontend should be build independant of the environment.
  steps:
  - checkout: self
    submodules: true

  - task: NuGetToolInstaller@1
    displayName: Install NuGet

  - task: NuGetCommand@2
    displayName: Restore Packages
    inputs:
      restoreSolution: '$(solution)'

  - task: DotNetCoreCLI@2
    displayName: Publish Web App
    inputs:
      command: publish
      publishWebProjects: True
      arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)/bin --runtime $(buildRuntime) --self-contained true /p:Version=$(Version.MajorMinor) /p:AssemblyVersion=$(Version.MajorMinor)'
      zipAfterPublish: True

  - task: NuGetCommand@2
    displayName: Create Packages
    inputs:
      command: 'pack'
      packagesToPack: '**/Laixer.Identity.Dapper.csproj'
      packDestination: '$(Build.ArtifactStagingDirectory)/pkg'
      versioningScheme: 'off'
      verbosityPack: 'Normal'

  - task: PublishBuildArtifacts@1
    displayName: Store Packages
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)/pkg'
      artifactName: PackageArtifacts

  - task: AzureWebApp@1
    displayName: Azure Web App Deploy - Production
    inputs:
      appType: webApp
      azureSubscription: 'FunderMaps - Azure Web Deploy'
      appName: 'fundermaps'
      package: '$(Build.ArtifactStagingDirectory)/**/FunderMaps.zip'
      deploymentMethod: zipDeploy
