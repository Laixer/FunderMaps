trigger:
- develop

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  project: '**/FunderMaps.csproj'
  buildPlatform: 'Any CPU'
  runtime: 'win-x64'
  buildConfiguration: 'Release'
  Vue.App_api_base_url: https://staging.fundermaps.com

steps:
- checkout: self
  submodules: true

- task: PowerShell@2
  displayName: Print Environment
  inputs:
    targetType: 'inline'
    script: |
      Get-ChildItem env:

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  displayName: Restore Packages
  inputs:
    restoreSolution: '$(solution)'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: '$(project)'
    arguments: '--configuration $(buildConfiguration) --runtime $(runtime)'

## TODO: Run testcases here

- task: DotNetCoreCLI@2
  displayName: Publish Web App
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)/bin --runtime $(runtime) --self-contained false'
    zipAfterPublish: True

# - task: DotNetCoreCLI@2
#   displayName: Create Packages
#   inputs:
#     command: pack
#     arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)/pkg'

- task: NuGetCommand@2
  displayName: Create Packages
  inputs:
    command: 'pack'
    packagesToPack: '**/Laixer.Identity.Dapper.csproj'
    packDestination: '$(Build.ArtifactStagingDirectory)/pkg'
    versioningScheme: 'off'
    verbosityPack: 'Normal'

- task: PublishBuildArtifacts@1
  displayName: Store Packages
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)/pkg'
    artifactName: PackageArtifacts

- task: AzureWebApp@1
  displayName: Azure Web App Deploy
  inputs:
    appType: webApp
    azureSubscription: 'FunderMaps Staging - Azure Web Deploy'
    appName: 'fundermaps'
    package: '$(Build.ArtifactStagingDirectory)/**/FunderMaps.zip'
    slotName: staging
    deploymentMethod: zipDeploy