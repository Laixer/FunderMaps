{
	"info": {
		"_postman_id": "8dc8ba47-b860-4bc2-8b69-63901d248853",
		"name": "FunderMaps.WebApi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Inquiry",
			"item": [
				{
					"name": "Create Inquiry",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"inquiry_id\", pm.response.json()[\"id\"])",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"DocumentName\": \"{{$randomFileName}}\",\r\n    \"Inspection\": {{$randomBoolean}},\r\n    \"JointMeasurement\": {{$randomBoolean}},\r\n    \"FloorMeasurement\": {{$randomBoolean}},\r\n    \"Note\": \"{{$randomLoremSentences}}\",\r\n    \"DocumentDate\": \"{{$isoTimestamp}}\",\r\n    \"DocumentFile\": \"{{$randomFileName}}\",\r\n    \"Type\": 2,\r\n    \"StandardF3o\": {{$randomBoolean}},\r\n    \"Contractor\": \"11cdc51f-3ba6-4e3c-b975-dfed4f054c31\",\r\n    \"Reviewer\": \"9d1b111a-c024-470c-b0b7-6810140924e8\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/inquiry",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Inquiry Document",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "input",
									"type": "file",
									"src": "file.pdf"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/inquiry/upload-document",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"inquiry",
								"upload-document"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Inquiry",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/inquiry/{{inquiry_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"inquiry",
								"{{inquiry_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Inquiries",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/inquiry",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"inquiry"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Inquiry",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"documentName\": \"{{$randomFileName}}\",\r\n    \"inspection\": {{$randomBoolean}},\r\n    \"jointMeasurement\": {{$randomBoolean}},\r\n    \"floorMeasurement\": {{$randomBoolean}},\r\n    \"note\": \"{{$randomLoremSentences}}\",\r\n    \"documentDate\": \"{{$isoTimestamp}}\",\r\n    \"documentFile\": \"{{$randomFileName}}\",\r\n    \"type\": 2,\r\n    \"standardF3o\": {{$randomBoolean}},\r\n    \"auditStatus\": 0,\r\n    \"reviewer\": \"9d1b111a-c024-470c-b0b7-6810140924e8\",\r\n    \"contractor\": \"11cdc51f-3ba6-4e3c-b975-dfed4f054c31\",\r\n    \"accessPolicy\": 0,\r\n    \"createDate\": \"2020-10-07T14:50:57.970056+02:00\",\r\n    \"updateDate\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/inquiry/{{inquiry_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"inquiry",
								"{{inquiry_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Review Inquiry",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Message\": \"{{$randomLoremSentences}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/inquiry/{{inquiry_id}}/status_review",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"inquiry",
								"{{inquiry_id}}",
								"status_review"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reject Inquiry",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Message\": \"{{$randomLoremSentences}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/inquiry/{{inquiry_id}}/status_rejected",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"inquiry",
								"{{inquiry_id}}",
								"status_rejected"
							]
						}
					},
					"response": []
				},
				{
					"name": "Approve Inquiry",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Message\": \"{{$randomLoremSentences}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/inquiry/{{inquiry_id}}/status_approved",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"inquiry",
								"{{inquiry_id}}",
								"status_approved"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Inquiry",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/inquiry/{{inquiry_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"inquiry",
								"{{inquiry_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Inquiry Sample",
			"item": [
				{
					"name": "Create Inquiry Sample",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"inquiry_sample_id\", pm.response.json()[\"id\"])",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Note\": \"{{$randomLoremSentences}}\",\r\n    \"Address\": \"{{address_id}}\",\r\n    \"BuiltYear\": \"{{$isoTimestamp}}\",\r\n    \"Cpt\": \"{{$randomFileName}}\",\r\n    \"MonitoringWell\": \"{{$randomFileName}}\",\r\n    \"EnforcementTerm\": 9,\r\n    \"RecoveryAdvised\": {{$randomBoolean}},\r\n    \"WoodQualityNecessity\": {{$randomBoolean}},\r\n    \"CrackIndoorRestored\": {{$randomBoolean}},\r\n    \"CrackFacadeFrontRestored\": {{$randomBoolean}},\r\n    \"CrackFacadeLeftRestored\": {{$randomBoolean}},\r\n    \"CrackFacadeRightRestored\": {{$randomBoolean}},\r\n    \"DeformedFacade\": {{$randomBoolean}},\r\n    \"ThresholdUpdownSkewed\": {{$randomBoolean}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/inquiry/{{inquiry_id}}/sample",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"inquiry",
								"{{inquiry_id}}",
								"sample"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Inquiry Samples",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/inquiry/{{inquiry_id}}/sample/{{inquiry_sample_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"inquiry",
								"{{inquiry_id}}",
								"sample",
								"{{inquiry_sample_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Samples",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/inquiry/{{inquiry_id}}/sample",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"inquiry",
								"{{inquiry_id}}",
								"sample"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Inquiry Sample",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"address\": \"{{address_id}}\",\r\n    \"note\": \"{{$randomLoremSentences}}\",\r\n    \"builtYear\": \"{{$isoTimestamp}}\",\r\n    \"substructure\": 0,\r\n    \"cpt\": null,\r\n    \"monitoringWell\": null,\r\n    \"groundwaterLevelTemp\": 0,\r\n    \"groundLevel\": 0,\r\n    \"groundwaterLevelNet\": 0,\r\n    \"type\": 0,\r\n    \"enforcementTerm\": 0,\r\n    \"recoveryAdvised\": false,\r\n    \"damageCause\": 0,\r\n    \"damageCharacteristics\": 0,\r\n    \"constructionPile\": 0,\r\n    \"woodType\": 0,\r\n    \"woodEncroachement\": 0,\r\n    \"constructionLevel\": 0,\r\n    \"woodLevel\": 0,\r\n    \"pileDiameterTop\": 0,\r\n    \"pileDiameterBottom\": 0,\r\n    \"pileHeadLevel\": 0,\r\n    \"pileTipLevel\": 0,\r\n    \"foundationDepth\": 0,\r\n    \"masonLevel\": 0,\r\n    \"concreteChargerLength\": 0,\r\n    \"pileDistanceLength\": 0,\r\n    \"woodPenetrationDepth\": 0,\r\n    \"overallQuality\": 0,\r\n    \"woodQuality\": 0,\r\n    \"constructionQuality\": 0,\r\n    \"woodCapacityHorizontalQuality\": 0,\r\n    \"pileWoodCapacityVerticalQuality\": 0,\r\n    \"carryingCapacityQuality\": 0,\r\n    \"masonQuality\": 0,\r\n    \"woodQualityNecessity\": false,\r\n    \"crackIndoorRestored\": false,\r\n    \"crackIndoorType\": 0,\r\n    \"crackIndoorSize\": 0,\r\n    \"crackFacadeFrontRestored\": false,\r\n    \"crackFacadeFrontType\": 0,\r\n    \"crackFacadeFrontSize\": 0,\r\n    \"crackFacadeBackRestored\": false,\r\n    \"crackFacadeBackType\": 0,\r\n    \"crackFacadeBackSize\": 0,\r\n    \"crackFacadeLeftRestored\": false,\r\n    \"crackFacadeLeftType\": 0,\r\n    \"crackFacadeLeftSize\": 0,\r\n    \"crackFacadeRightRestored\": false,\r\n    \"crackFacadeRightType\": 0,\r\n    \"crackFacadeRightSize\": 0,\r\n    \"deformedFacade\": false,\r\n    \"thresholdUpdownSkewed\": false,\r\n    \"thresholdFrontLevel\": 0,\r\n    \"thresholdBackLevel\": 0,\r\n    \"skewedParallel\": 0,\r\n    \"skewedPerpendicular\": 0,\r\n    \"skewedFacade\": 0,\r\n    \"settlementSpeed\": 0,\r\n    \"createDate\": \"2020-10-07T15:33:17.709187+02:00\",\r\n    \"updateDate\": null,\r\n    \"deleteDate\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/inquiry/{{inquiry_id}}/sample/{{inquiry_sample_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"inquiry",
								"{{inquiry_id}}",
								"sample",
								"{{inquiry_sample_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Inquiry Sample",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/inquiry/{{inquiry_id}}/sample/{{inquiry_sample_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"inquiry",
								"{{inquiry_id}}",
								"sample",
								"{{inquiry_sample_id}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Recovery",
			"item": [
				{
					"name": "Create Recovery",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.set('randomRecoveryType', _.random(0, 4));\r",
									"\r",
									"const zeroPad = (num, places) => String(num).padStart(places, '0')\r",
									"pm.globals.set('randomDateTime', `${_.random(1970, 2020)}-${zeroPad(_.random(1,12), 2)}-${zeroPad(_.random(1,28), 2)}`);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"recovery_id\", pm.response.json()[\"id\"])\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"note\": \"{{$randomLoremSentences}}\",\r\n    \"documentDate\": \"{{randomDateTime}}\",\r\n    \"documentFile\": \"{{$randomCommonFileName}}\",\r\n    \"type\": {{randomRecoveryType}},\r\n    \"attribution\": 207\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/recovery",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"recovery"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Recovery",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/recovery/{{recovery_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"recovery",
								"{{recovery_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Recovery Document",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/recovery/{{recovery_id}}/download",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"recovery",
								"{{recovery_id}}",
								"download"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Recovery",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/recovery",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"recovery"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Recovery",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.set('randomRecoveryType', _.random(0, 4));\r",
									"\r",
									"const zeroPad = (num, places) => String(num).padStart(places, '0')\r",
									"pm.globals.set('randomDateTime', `${_.random(1970, 2020)}-${zeroPad(_.random(1,12), 2)}-${zeroPad(_.random(1,28), 2)}`);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"note\": \"{{$randomLoremSentences}}\",\r\n    \"documentDate\": \"{{randomDateTime}}\",\r\n    \"documentFile\": \"3516cbe8-c70a-47ef-8d85-30139b972c28.txt\",\r\n    \"type\": {{randomRecoveryType}},\r\n    \"attribution\": 1,\r\n    \"accessPolicy\": 1,\r\n    \"createDate\": \"{{randomDateTime}}\",\r\n    \"updateDate\": null,\r\n    \"deleteDate\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/recovery/{{recovery_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"recovery",
								"{{recovery_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Recovery",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/recovery/{{recovery_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"recovery",
								"{{recovery_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Recovery Document",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "input",
									"type": "file",
									"src": "file.pdf"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/recovery/upload-document",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"recovery",
								"upload-document"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Recovery Stats",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/recovery/4",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"recovery",
								"4"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Recovery Sample",
			"item": [
				{
					"name": "Create Recovery Sample",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.set('randomRecoveryType', _.random(0, 4));\r",
									"\r",
									"const zeroPad = (num, places) => String(num).padStart(places, '0')\r",
									"pm.globals.set('randomDateTime', `${_.random(1970, 2020)}-${zeroPad(_.random(1,12), 2)}-${zeroPad(_.random(1,28), 2)}`);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"recovery_sample_id\", pm.response.json()[\"id\"])\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"note\": \"{{$randomLoremSentences}}\",\r\n    \"address\": \"gfm-00000163c7e04fa9a562688df1e077b9\",\r\n    \"permit\": \"{{$randomBsBuzz}}\",\r\n    \"permitDate\": \"{{randomDateTime}}\",\r\n    \"recoveryDate\": \"{{randomDateTime}}\",\r\n    \"facade\": []\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/recovery/{{recovery_id}}/sample",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"recovery",
								"{{recovery_id}}",
								"sample"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Recovery Sample",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/recovery/2/sample/3",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"recovery",
								"2",
								"sample",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Recovery Sample Stats",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/recovery/4",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"recovery",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Recovery Sample",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const zeroPad = (num, places) => String(num).padStart(places, '0')\r",
									"const facades = [];\r",
									"for (var i = 0; i < _.random(0,10); i++) {\r",
									"    facades.push(_.random(0,3));\r",
									"}\r",
									"\r",
									"pm.globals.set('randomRecoveryType', _.random(0, 4));\r",
									"pm.globals.set('randomDateTime', `${_.random(1970, 2020)}-${zeroPad(_.random(1,12), 2)}-${zeroPad(_.random(1,28), 2)}`);\r",
									"pm.globals.set('randomRecoveryDate', `${_.random(1970, 2020)}-${zeroPad(_.random(1,12), 2)}-${zeroPad(_.random(1,28), 2)}`);\r",
									"pm.globals.set('randomFacadeArray', facades);\r",
									"pm.globals.set('randomPileType', _.random(0, 2));\r",
									"pm.globals.set('ramdomRecoveryType', _.random(0, 5));\r",
									"pm.globals.set('randomRecoveryStatus', _.random(0, 2));\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"note\": \"{{$randomLoremSentences}}\",\r\n    \"address\": \"gfm-91f5141a92fa485f9a2d39c1c12b5390\",\r\n    \"status\": {{randomRecoveryStatus}},\r\n    \"permit\": \"{{$randomBsBuzz}}\",\r\n    \"permitDate\": \"{{randomDateTime}}\",\r\n    \"recoveryDate\": \"{{randomRecoveryDate}}\",\r\n    \"facade\": [{{randomFacadeArray}}],\r\n    \"pileType\": {{randomPileType}},\r\n    \"type\": {{randomRecoveryType}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/recovery/{{recovery_id}}/sample/{{recovery_sample_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"recovery",
								"{{recovery_id}}",
								"sample",
								"{{recovery_sample_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Recovery Sample",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/recovery/{{recovery_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"recovery",
								"{{recovery_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Incident",
			"item": [
				{
					"name": "Create Incident",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Name\": \"{{$randomFullName}}\",\r\n    \"ClientId\": 3,\r\n    \"Email\": \"{{$randomEmail}}\",\r\n    \"PhoneNumber\": \"06360557722\",\r\n    \"FoundationType\": 5,\r\n    \"Address\": \"gfm-00000163c7e04fa9a562688df1e077b9\",\r\n    \"FoundationDamageCharacteristics\": [\r\n        1,\r\n        3\r\n    ],\r\n    \"EnvironmentDamageCharacteristics\": [\r\n        1\r\n    ],\r\n    \"Owner\": {{$randomBoolean}},\r\n    \"FoundationRecovery\": {{$randomBoolean}},\r\n    \"NeighborRecovery\": {{$randomBoolean}},\r\n    \"FoundationDamageCause\": 6,\r\n    \"DocumentFile\": [\r\n        \"{{$randomFileName}}\"\r\n    ],\r\n    \"Note\": \"{{$randomLoremSentences}}\",\r\n    \"InternalNote\": \"{{$randomLoremSentences}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/incident",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"incident"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Incident",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/incident/FIR122020-12570",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"incident",
								"FIR122020-12570"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Incidents",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/incident?limit=5",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"incident"
							],
							"query": [
								{
									"key": "limit",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Incident",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"FIR032020-12600\",\r\n    \"clientId\": 3,\r\n    \"foundationType\": 5,\r\n    \"chainedBuilding\": {{$randomBoolean}},\r\n    \"owner\": {{$randomBoolean}},\r\n    \"foundationRecovery\": {{$randomBoolean}},\r\n    \"neighborRecovery\": {{$randomBoolean}},\r\n    \"foundationDamageCause\": 6,\r\n    \"documentFile\": [\r\n        \"https://somefile.ext\"\r\n    ],\r\n    \"note\": \"{{$randomLoremSentences}}\",\r\n    \"internalNote\": \"{{$randomLoremSentences}}\",\r\n    \"auditStatus\": 0,\r\n    \"questionType\": 0,\r\n    \"foundationDamageCharacteristics\": [\r\n        1,\r\n        3\r\n    ],\r\n    \"environmentDamageCharacteristics\": [\r\n        1\r\n    ],\r\n    \"email\": \"Kaylah.Wehner@yahoo.com\",\r\n    \"name\": \"{{$randomFullName}}\",\r\n    \"phoneNumber\": \"06360557722\",\r\n    \"address\": \"gfm-00000163c7e04fa9a562688df1e077b9\",\r\n    \"createDate\": \"2020-09-08T13:54:53.269121+00:00\",\r\n    \"updateDate\": null,\r\n    \"deleteDate\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/incident/FIR122020-12570",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"incident",
								"FIR122020-12570"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Portal",
			"item": [
				{
					"name": "Create Incident",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Name\": \"{{$randomFullName}}\",\r\n    \"ClientId\": 3,\r\n    \"Email\": \"{{$randomEmail}}\",\r\n    \"PhoneNumber\": \"06360557722\",\r\n    \"FoundationType\": 5,\r\n    \"Address\": \"gfm-00000163c7e04fa9a562688df1e077b9\",\r\n    \"FoundationDamageCharacteristics\": [\r\n        1,\r\n        3\r\n    ],\r\n    \"EnvironmentDamageCharacteristics\": [\r\n        1\r\n    ],\r\n    \"Owner\": {{$randomBoolean}},\r\n    \"FoundationRecovery\": {{$randomBoolean}},\r\n    \"NeighborRecovery\": {{$randomBoolean}},\r\n    \"FoundationDamageCause\": 6,\r\n    \"DocumentFile\": [\r\n        \"https://somefile.ext\"\r\n    ],\r\n    \"Note\": \"{{$randomLoremSentences}}\",\r\n    \"InternalNote\": \"{{$randomLoremSentences}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/incident-portal/submit",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"incident-portal",
								"submit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Address Suggestions",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/incident-portal/address-suggest?query=2628XG&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"incident-portal",
								"address-suggest"
							],
							"query": [
								{
									"key": "query",
									"value": "2628XG"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Incident Document",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "input",
									"type": "file",
									"src": "/home/yorick/Downloads/dummy.pdf"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/incident-portal/upload-document",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"incident-portal",
								"upload-document"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Address",
			"item": [
				{
					"name": "Get Suggestions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.json().length > 0) {",
									"    pm.environment.set(\"address_id\", pm.response.json()[0][\"id\"])",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/address/suggest?query=3123EB&limit=20",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"address",
								"suggest"
							],
							"query": [
								{
									"key": "query",
									"value": "3123EB"
								},
								{
									"key": "limit",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get address",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/address/{{address_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"address",
								"{{address_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Get Current User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/user",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Current User",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"407988e2-e80c-4edd-85ab-2469c8beb15d\",\r\n    \"givenName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"email\": \"{{username}}\",\r\n    \"avatar\": null,\r\n    \"jobTitle\": \"{{$randomJobTitle}}\",\r\n    \"phoneNumber\": \"067634283\",\r\n    \"role\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/user",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Organization",
			"item": [
				{
					"name": "Organization Setup",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/organization/setup",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"organization",
								"setup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Current Organization [Session]",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/organization",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"organization"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Current Organization [Session]",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"givenName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"email\": \"{{username}}\",\r\n    \"avatar\": null,\r\n    \"jobTitle\": \"{{$randomJobTitle}}\",\r\n    \"phoneNumber\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/organization/user",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"organization",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Organization [Admin]",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Starbucks\",\r\n    \"email\": \"info@starbucks.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/organization",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"organization"
							]
						}
					},
					"response": []
				},
				{
					"name": "Organization Setup [Anon]",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{username}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/organization/11cdc51f-3ba6-4e3c-b975-dfed4f054c31/setup",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"organization",
								"11cdc51f-3ba6-4e3c-b975-dfed4f054c31",
								"setup"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "SignIn",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"bearer_token\", jsonData.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Email\": \"{{username}}\",\r\n    \"Password\": \"{{password}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/auth/signin",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"signin"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"bearer_token\", jsonData.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/auth/token-refresh",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"token-refresh"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Layer",
			"item": [
				{
					"name": "Get Layer",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/layer/{{layer_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"layer",
								"{{layer_id}}"
							]
						},
						"description": "Returns layer by id"
					},
					"response": []
				},
				{
					"name": "Get All Layers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/layer",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"layer"
							]
						},
						"description": "Returns all layers"
					},
					"response": []
				}
			]
		},
		{
			"name": "Bundle",
			"item": [
				{
					"name": "Get All Bundles",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/bundle",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"bundle"
							]
						},
						"description": "Gets all the bundles (scoped to organization)"
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Version",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql('FunderMaps');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/version",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"version"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearer_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": ""
		},
		{
			"key": "bearer_token",
			"value": ""
		}
	]
}