@page "/organization"
@attribute [Authorize(Policy = "AdministratorPolicy")]

<PageTitle>Organizations</PageTitle>

@using FunderMaps.Core.Interfaces.Repositories
@inject IOrganizationRepository OrganizationRepository

<h1>Organizations</h1>

@if (trackers == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Product</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var tracker in trackers)
            {
                <tr>
                    <td><NavLink href="@tracker.DetailLink">@tracker.Id</NavLink></td>
                    <td>@tracker.Name</td>
                    <td>@tracker.Email</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    public class Woei
    {
        /// <summary>
        ///     Unique identifier.
        /// </summary>
        public Guid Id { get; set; }

        /// <summary>
        ///     Gets or sets the name for the organization.
        /// </summary>
        public string Name { get; set; }

        /// <summary>
        ///     Gets or sets the email address for the organization.
        /// </summary>
        public string Email { get; set; }

        public string DetailLink { get => $"/organization/{Id}"; }
    }

    private List<Woei> trackers = new();

    protected override async Task OnInitializedAsync()
    {
        await foreach (var organization in OrganizationRepository.ListAllAsync(FunderMaps.Core.Navigation.All))
        {
            trackers.Add(new Woei
            {
                Id = organization.Id,
                Name = organization.Name,
                Email = organization.Email,
            });
        }
    }
}
