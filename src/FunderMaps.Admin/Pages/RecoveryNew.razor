@page "/recovery/new"
@using Core.Types
@using FunderMaps.Core.Interfaces.Repositories
@using System.ComponentModel.DataAnnotations

@inject IRecoveryRepository RecoveryRepository
@inject IHttpContextAccessor HttpContextAccessor
@inject Core.AppContext AppContext

<PageTitle>Recovery new</PageTitle>

<h1>Recovery new</h1>

<EditForm Model="@recModel" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-row">
        <label for="note">Note</label>
        <InputText class="form-control" id="note" @bind-Value="recModel.Note" />
    </div>
    <div class="form-row">
        <label for="type">Type</label>
        <InputSelect class="form-control" id="type" @bind-Value="recModel.Type">
            <option value="Permit">Permit</option>
            <option value="FoundationReport">FoundationReport</option>
            <option value="ArchiveReport">ArchiveReport</option>
            <option value="OwnerEvidence">OwnerEvidence</option>
            <option value="Unknown">Unknown</option>
        </InputSelect>
    </div>
    <div class="form-row">
        <label for="document_file">Document file</label>
        <InputText class="form-control" id="document_file" @bind-Value="recModel.DocumentFile" />
    </div>
    <div class="form-row">
        <label for="document_date">Document date</label>
        <InputDate class="form-control" id="document_date" @bind-Value="recModel.DocumentDate" />
    </div>
    <div class="form-row">
        <label for="document_name">Document name</label>
        <InputText class="form-control" id="document_name" @bind-Value="recModel.DocumentName" />
    </div>
    <div class="form-row">
        <label for="reviewer">Reviewer ID</label>
        <InputText class="form-control" id="reviewer" @bind-Value="recModel.Reviewer" />
    </div>
    <div class="form-row">
        <label for="contractor">Contractor ID</label>
        <InputText class="form-control" id="contractor" @bind-Value="recModel.Contractor" />
    </div>

    <button class="btn btn-primary" type="submit">Submit</button>
</EditForm>

@code {
    public class Woei
    {
        /// <summary>
        /// Note.
        /// </summary>
        public string Note { get; set; }

        /// <summary>
        /// Foundation recovery type.
        /// </summary>
        [Required]
        public RecoveryDocumentType Type { get; set; }

        /// <summary>
        /// Document file name.
        /// </summary>
        [Required]
        public string DocumentFile { get; set; }

        /// <summary>
        /// Document date.
        /// </summary>
        [Required]
        public DateTime DocumentDate { get; set; }

        /// <summary>
        /// Client document identifier.
        /// </summary>
        [Required]
        public string DocumentName { get; set; }

        public string Reviewer { get; set; }
        public string Contractor { get; set; }
    }

    private Woei recModel = new();

    private async Task HandleValidSubmit()
    {
        var httpContext = HttpContextAccessor.HttpContext;

        var (user, tenant) =
        FunderMaps.AspNetCore.Authentication.PrincipalProvider.GetUserAndTenant<FunderMaps.Core.Entities.User,
        FunderMaps.Core.Entities.Organization>(httpContext.User);
        AppContext.User = user;
        AppContext.Tenant = tenant;

        Core.Entities.Recovery recovery = new();
        recovery.Note = recModel.Note;
        recovery.Type = recModel.Type;
        recovery.DocumentFile = recModel.DocumentFile;
        recovery.DocumentDate = recModel.DocumentDate;
        recovery.DocumentName = recModel.DocumentName;
        recovery.Access = new();
        recovery.Attribution = new();
        recovery.Attribution.Reviewer = Guid.Parse(recModel.Reviewer);
        recovery.Attribution.Contractor = Guid.Parse(recModel.Contractor);

        await RecoveryRepository.AddGetAsync(recovery);
    }
}
